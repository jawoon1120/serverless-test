{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "unused-imports",
        "import",
        "jsdoc",
        "@typescript-eslint/eslint-plugin"
    ],
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:prettier/recommended"
    ],
    "root": true,
    "env": {
        "node": true
    },
    "rules": {
        "prettier/prettier": [
            "error",
            {},
            {
                "usePrettierrc": true
            }
        ],
        "indent": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "interface",
                "format": [
                    "PascalCase"
                ],
                "custom": {
                    "regex": "^!I[A-Z]",
                    "match": false
                }
            }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array-simple"
            }
        ],
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                    "Object": {
                        "message": "Avoid using the `Object` type. Did you mean `object`?"
                    },
                    "Function": {
                        "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                    },
                    "Boolean": {
                        "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                    },
                    "Number": {
                        "message": "Avoid using the `Number` type. Did you mean `number`?"
                    },
                    "String": {
                        "message": "Avoid using the `String` type. Did you mean `string`?"
                    },
                    "Symbol": {
                        "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                    }
                }
            }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/explicit-member-accessibility": [
            "off",
            {
                "accessibility": "explicit"
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": [
                    "signature",
                    "public-static-field",
                    "protected-static-field",
                    "private-static-field",
                    "public-static-method",
                    "protected-static-method",
                    "private-static-method",
                    "constructor",
                    "public-constructor",
                    "protected-constructor",
                    "private-constructor",
                    "decorated-field",
                    "public-instance-field",
                    "protected-instance-field",
                    "private-instance-field",
                    "public-instance-method",
                    "protected-instance-method",
                    "private-instance-method"
                ]
            }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/quotes": [
            "error",
            "single"
        ],
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "@typescript-eslint/triple-slash-reference": [
            "error",
            {
                "path": "always",
                "types": "prefer-import",
                "lib": "always"
            }
        ],
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-unsafe-assignment": 0,
        "@typescript-eslint/no-unsafe-member-access": 0,
        "@typescript-eslint/no-unsafe-return": 0,
        "@typescript-eslint/no-floating-promises": 0,
        "arrow-body-style": "error",
        "arrow-parens": [
            "error",
            "always"
        ],
        "brace-style": [
            "off",
            "off"
        ],
        "comma-dangle": "error",
        "complexity": "off",
        "constructor-super": "error",
        "curly": "error",
        "dot-notation": "off",
        "eol-last": "error",
        "eqeqeq": [
            "error",
            "smart"
        ],
        "guard-for-in": "error",
        "id-blacklist": "error",
        "id-match": "error",
        "import/no-deprecated": "error",
        "import/no-extraneous-dependencies": "error",
        "import/no-internal-modules": "error",
        "import/order": [
            "error",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "object",
                    "type",
                    "index"
                ],
                "pathGroups": [
                    {
                        "pattern": "@nestjs/**",
                        "group": "external"
                    },
                    {
                        "pattern": "@aws-sdk/**",
                        "group": "external",
                        "position": "after"
                    },
                    {
                        "pattern": "@core/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@config/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@decorators/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@interfaces/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@services/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@entity/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@dto/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "@app/**/*",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "./*",
                        "group": "index"
                    }
                ],
                "pathGroupsExcludedImportTypes": [
                    "builtin"
                ]
            }
        ],
        "unused-imports/no-unused-imports": "error",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/newline-after-description": "error",
        "max-classes-per-file": [
            "error",
            1
        ],
        "max-len": [
            "error",
            {
                "code": 180
            }
        ],
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": [
            "error",
            {
                "allow": [
                    "log",
                    "dirxml",
                    "warn",
                    "error",
                    "dir",
                    "timeLog",
                    "assert",
                    "clear",
                    "count",
                    "countReset",
                    "group",
                    "groupCollapsed",
                    "groupEnd",
                    "table",
                    "Console",
                    "markTimeline",
                    "profile",
                    "profileEnd",
                    "timeline",
                    "timelineEnd",
                    "timeStamp",
                    "context"
                ]
            }
        ],
        "no-debugger": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-invalid-this": "error",
        "no-multiple-empty-lines": "error",
        "no-new-wrappers": "error",
        "no-throw-literal": "warn",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-unsafe-finally": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "object-shorthand": "error",
        "one-var": [
            "error",
            "never"
        ],
        "quote-props": "off",
        "radix": "error",
        "space-before-function-paren": "off",
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "use-isnan": "error",
        "valid-typeof": "off",
        "no-underscore-dangle": "off",
        "no-shadow": "off"
    },
    "overrides": [
        {
            "files": [
                "src/test/*.ts",
                "src/**/*.spec.ts"
            ],
            "rules": {
                "no-unused-expressions": "off",
                "max-len": "off",
                "@typescript-eslint/explicit-function-return-type": "off",
                "@typescript-eslint/no-unsafe-argument": "off",
                "@typescript-eslint/unified-signatures": "off",
                "@typescript-eslint/unbound-method": "off",
                "@typescript-eslint/ban-types": "off"
            }
        }
    ]
}